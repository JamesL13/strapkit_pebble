#!/bin/env bash

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

function isGitRepo (){
	local dir=$1

	cd $dir > /dev/null
	local rv="1"
	if [ -d .git ];then
		rv="0"
	fi
	cd - > /dev/null
	return $rv
}

function GitInit (){
	local topJsDir=$1

	local gitignore="$STRAPKIT_PATH/aux/.gitignore"
	
	local STRAPKIT_PATH=$( cd "$( > /dev/null dirname "$0" )" && pwd -P)
	
	isGitRepo $topJsDir
	local topJsRepoStatus=$?
	if [  "$topJsRepoStatus" -ne "0" ];then
		cd $topJsDir > /dev/null
		git init > /dev/null
		cp $gitignore $indexDir
		cd - > /dev/null
	fi

	local internalJSDir=$2
	
	isGitRepo $internalJSDir
	local internalJSRepoStatus=$?
	if [ "$internalJSRepoStatus" -ne "0" ];then
		cd $internalJSDir > /dev/null
		git init > /dev/null
		git remote add origin $topJsDir > /dev/null
		cd - > /dev/null
	fi
}

function AddCommit (){
	local jsDir=$1
	cd $jsDir
	git add --all . > /dev/null
	git commit -m "saving top level js dir changes" > /dev/null
	cd -
}			

function PullChangesTo (){
	local pebbleSrcJs=$1
	cd $pebbleSrcJs
	git fetch origin master:new > /dev/null
	git merge --commit -m "pull changes from top level js dir" new > /dev/null
	git branch -d new > /dev/null
	cd -
}

function SyncDirContents (){
	local indexDir=$1
	local appDir=$2

	GitInit $indexDir $appDir
	AddCommit $indexDir
	PullChangesTo $appDir
}

function RenameToAppJs (){
	local mainfile=$1
	local appdir=$2

	cd $appdir
	local pebblejsAppName="app.js"
	if [ "$mainfile" != "$pebblejsAppName" ]; then # if (rename required)
		mv $mainfile $pebblejsAppName 2> /dev/null
		local status=$(echo $?)
		if [ "$status" -eq "1" ]; then
			echo "$mainfile does not exist"
		fi
	fi
	cd - > /dev/null
}

function PebbleBuild (){
	local pebbleproj=$1
	cd $pebbleproj > /dev/null
	pebble build
	cd - > /dev/null
}

function CreateBuildDir (){
	local projRootDir=$1

	if [ ! -d "$projRootDir/build/" ]; then
		mkdir -v "$projRootDir/build/"
		if [ ! -d "$projRootDir/build/pebble" ]; then
			mkdir -v "$projRootDir/build/pebble"
		fi
	fi
}

function ReturnPBW (){
	local projRootDir=$1
	local pebbleProjDir=$2
	local projName=$3

	CreateBuildDir $projRootDir

	cd $pebbleProjDir
	if [ -d "build" ]; then
		local pbw="./build/$projName.pbw"
		if [ -d "$pbw" ]; then
			cp -p $pbw "$projRootDir/build/pebble"
		fi
	fi
	cd - > /dev/null
}

STRAPKIT_PATH=$( cd "$( dirname "$0" )" && pwd -P)
PROJECT_PATH="$(dirname "$STRAPKIT_PATH")"
PROJECT_ROOT="$(dirname $(dirname "$PROJECT_PATH"))"
PROJECT_NAME=$( basename $( pwd -P ) )
# PROJECT_NAME=$( node $STRAPKIT_PATH/aux/ReadProjectName.js $PROJECT_ROOT/config.xml )
pblProj="$PROJECT_PATH/$PROJECT_NAME"

# appInfo="$pblProj/appinfo.json"
# UpdateAppName="$STRAPKIT_PATH/aux/UpdateAppName"
# $UpdateAppName $appInfo $PROJECT_NAME

indexDir="$PROJECT_ROOT/js/"
appDir="$pblProj/src/js/"
SyncDirContents $indexDir $appDir

mainfile="app.js"
if [ ! -z ${1+x} ];then # if($1)
	mainfile=$(basename $1)
fi
RenameToAppJs $mainfile $appDir

platformResources="$PROJECT_ROOT/resources/pebble/"
appResources="$pblProj/resources/"
SyncDirContents $platformResources $appResources

appInfo="$pblProj/appinfo.json"
UpdateMediaResources="$STRAPKIT_PATH/aux/UpdateMediaResources"
# imageResources="$pblProj/resources/images"
# fontResources="$pblProj/resources/fonts"
imageResources="$pblProj/resources/images"
fontResources="$pblProj/resources/fonts"
$UpdateMediaResources $appInfo $imageResources $fontResources

PebbleBuild $pblProj

ReturnPBW $PROJECT_ROOT $pblProj $PROJECT_NAME

# echo "PROJECT_PATH $PROJECT_PATH"
# echo "PROJECT_NAME $PROJECT_NAME"
# echo "PROJECT_ROOT $PROJECT_ROOT"
# echo "indexDir $indexDir"
# echo "pblProj $pblProj"
# echo "appDir $appDir"

# PROJECT_PATH /home/marcelle/Code/strap/experiment/new/platforms/pebble
# PROJECT_ROOT /home/marcelle/Code/strap/experiment/new
# PROJECT_NAME new
# indexDir /home/marcelle/Code/strap/experiment/new/js/
# pblProj /home/marcelle/Code/strap/experiment/new/platforms/pebble/new
# appDir /home/marcelle/Code/strap/experiment/new/platforms/pebble/new/src/js/